# frozen_string_literal: true

return if ENV['irbrc_loaded']
puts "Loading #{__FILE__} ..."

IRB.conf[:EVAL_HISTORY] = 10
IRB.conf[:COMMAND_ALIASES].merge!({ help: :show_cmds })
IRB.conf[:COMMAND_ALIASES].merge!({ cd: :chws })

Reline::Face.config(:completion_dialog) do |conf|
  conf.define :default, foreground: :white, background: :black
  conf.define :enhanced, foreground: :black, background: :cyan
  conf.define :scrollbar, foreground: :white, background: :black
end

require_relative 'require_gem'
require_gem 'pry'
require_gem 'yard'
require_gem 'pry-doc'
require 'benchmark'

# Convenience Methods:

def an_array
  (1..10).to_a
end

def a_hash
  { foo: 'Foo', bar: 'Bar', baz: 'Baz' }
end

def bench(repetitions = 1000, &block)
  Benchmark.bm { |b| b.report { repetitions.times(&block) } }
  nil
end

module IRB
  class << self
    private def easter_egg_logo(type = 'UNICODE')
      @easter_egg_location = File.join(RG.gem_dir, RG.latest_version('irb'), 'lib', 'irb')
      @easter_egg_logos ||= File.read(File.join(@easter_egg_location, 'ruby_logo.aa'), encoding: 'UTF-8:UTF-8')
          .split(/TYPE: ([A-Z]+)\n/)[1..]
          .each_slice(2)
          .to_h
      RDoc::RI::Driver.new.page do |io|
        io.write @easter_egg_logos[type.to_s.upcase]
      end
    end
  end
end

# include Rails Route/Views helpers
def iv
  include ActionDispatch::Routing              # for named paths
  include Rails.application.routes.url_helpers # for named paths
  include ActionView::Helpers::UrlHelper       # for url_for
  puts 'Loaded Rails Route/View helpers'
end

ENV['irbrc_loaded'] = 'true'
puts "Loaded #{__FILE__}!"
